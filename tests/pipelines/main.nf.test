nextflow_pipeline {
    name "Integration Tests for Cluster Splitting"
    script "main.nf"

    test("Small-scale test of full pipeline"){
        tag "pipeline"
        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet.csv"
                outdir = "results"

                ar_config = "$baseDir/tests/data/configs/config.json"

                metadata_partition_name = "outbreak"
                metadata_1_header = "organism"
                metadata_2_header = "subtype"
                metadata_3_header = "country"
                metadata_4_header = "serovar"
                metadata_5_header = "age"
                metadata_6_header = "date"
                metadata_7_header = "source"
                metadata_8_header = "special"
            }
        }

        then {
            assert workflow.success
            assert path("$launchDir/results").exists()

            // Check merged profiles
            def actual_profile_tsv = path("$launchDir/results/merged/profile.tsv")
            def expected_profile_tsv = path("$baseDir/tests/data/profiles/merged_profiles.tsv")
            assert actual_profile_tsv.text == expected_profile_tsv.text

            // Check aggregated metadata
            def actual_metadata = path("$launchDir/results/metadata/aggregated_data.tsv")
            def expected_metadata = path("$baseDir/tests/data/metadata/expected_merged_data.tsv")
            assert actual_metadata.text == expected_metadata.text

            // Check that the ArborView output is created
            def actual_arborview = path("$launchDir/results/arborview/1_arborview.html")
            assert actual_arborview.exists()
            assert actual_arborview.text.contains("sample\\toutbreak\\torganism\\tsubtype\\tcountry\\tserovar\\tage\\tdate\\tsource\\tspecial\\nS1\\t1\\tEscherichia coli\\tEHEC/STEC\\tCanada\\tO157:H7\\t21\\t2024/05/30\\tbeef\\tTrue\\nS2\\t1\\tEscherichia coli\\tEHEC/STEC\\tThe United States\\tO157:H7\\t55\\t2024/05/21\\tmilk\\tFalse\\n")

            actual_arborview = path("$launchDir/results/arborview/2_arborview.html")
            assert actual_arborview.exists()
            assert actual_arborview.text.contains("sample\\toutbreak\\torganism\\tsubtype\\tcountry\\tserovar\\tage\\tdate\\tsource\\tspecial\\nS3\\t2\\tEscherichia coli\\tEPEC\\tFrance\\tO125\\t14\\t2024/04/30\\tcheese\\tTrue\\nS4\\t2\\tEscherichia coli\\tEPEC\\tFrance\\tO125\\t35\\t2024/04/22\\tcheese\\tTrue\\n")
        }
    }
}
