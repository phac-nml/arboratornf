nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"

    test("-profile test") {

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet.csv"
                outdir = "$outputDir"

                metadata_partition_name = "outbreak"
                metadata_1_header = "organism"
                metadata_2_header = "subtype"
                metadata_3_header = "country"
                metadata_4_header = "serovar"
                metadata_5_header = "age"
                metadata_6_header = "date"
                metadata_7_header = "source"
                metadata_8_header = "special"
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(params.outdir, relative: true, includeDir: true, ignore: ['pipeline_info/*.{html,json,txt}', 'arborator/run.json', 'iridanext.output.json'])
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore')
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // Number of successful tasks
                    workflow.trace.succeeded().size(),
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we test pipelines on multiple Nextflow versions
                    null, // removeNextflowVersion("$outputDir/pipeline_info/phac_nml_metadatatransformation_software_mqc_versions.yml"),
                    // All stable path name, with a relative path
                    stable_name,
                    // All files with stable contents
                    stable_path
                ).match() }
            )
        }
    }
}
